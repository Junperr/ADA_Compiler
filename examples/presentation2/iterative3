with Ada.Text_IO; use Ada.Text_IO;
procedure Test is

    type FactResult is record
        value : Integer;
        result : Integer;
    end record;

    function EstPremier(N : Integer) return Boolean is
        Racine : Integer;
    begin
        if N <= 1 then
            return False;
        elsif N <= 3 then
            return True;
        end if;

        Racine := 1;
        while Racine * Racine <= N loop
            Racine := Racine + 1;
        end loop;
        Racine := Racine - 1;

        for I in 2..Racine loop
            if N rem I = 0 then
                return False;
            end if;
        end loop;

        return True;
    end EstPremier;
    -- Fonction récursive pour calculer la factorielle
    function Factorielle(N : Integer) return Integer is
        Resultat : Integer := 1;
    begin
        if N <= 0 then
            return 1;
        end if;

        for I in 2..N loop
            Resultat := Resultat * I;
        end loop;

        return Resultat;
    end Factorielle;

    -- Procédure pour calculer la factorielle d'un nombre premier
    -- et retourner le résultat dans AdresseResult
    function CalculerFactorielle(X : in Integer; AdresseResult : in out Integer) return FactResult is

        factStruct : FactResult;
    begin
        if EstPremier(X) then
            factStruct.value := X;
            factStruct.result := Factorielle(X);
            AdresseResult := factStruct.result;
            return factStruct;
        else
            factStruct.value := X;
            factStruct.result := -1;
            Put("Le nombre n'est pas premier.");
            AdresseResult := -1;
            return factStruct;
        end if;
    end CalculerFactorielle;
    Result : Integer;
    factR : FactResult;
    toCheck : Integer := 4;
begin
    factR := CalculerFactorielle(toCheck, Result);
    Put("Factorielle de ");
    Put(Integer'Image(toCheck));
    Put(" : ");
    Put(Integer'Image(Result));
    New_Line;
    Put("Factorielle in record for ");
    Put(Integer'Image(factR.value));
    Put(" is ");
    Put(Integer'Image(factR.result));
end Test;