with Ada.Text_IO; use Ada.Text_IO;
procedure Test is
    type ExampleRecord is
        record
            A : Integer;
            B : Integer;
        end record;
    B : ExampleRecord;
    X : Integer;
    function GiveRecord return ExampleRecord is
        Result : ExampleRecord;
    begin
        Result.A := 1;
        Result.B := 2;
        return Result;
    end GiveRecord;

    function EstPremier(N : Integer) return Boolean is
            Racine : Integer;
            B : Boolean := True;
        begin
            if N <= 1 then
                return False;
            elsif N <= 3 then
                return True;
            end if;

            Racine := 1;
            while Racine * Racine <= N loop
                Racine := Racine + 1;
            end loop;
            Racine := Racine - 1;

            for I in 2..Racine loop
                if N rem I = 0 then
                    B := False;
                end if;
            end loop;

            return B;
        end EstPremier;

    -- Fonction rÃ©cursive pour calculer la factorielle
            function Factorielle(N : Integer) return Integer is
            begin
                if N <= 1 then
                    return 1;
                else
                    return N * Factorielle(N - 1);
                end if;
            end Factorielle;

    function CalculerFactorielle(X : in Integer; AdresseResult : in out Integer) return ExampleRecord is
            factStruct : ExampleRecord;
        begin
            if EstPremier(X) then
                AdresseResult := Factorielle(X);
            else
                AdresseResult := -1;
            end if;
            return GiveRecord;
        end CalculerFactorielle;
begin
    B := CalculerFactorielle(5, X);
    Put(X); New_Line;
    B := GiveRecord;
    Put(B.A); New_Line;
    Put(B.B);
end Test;